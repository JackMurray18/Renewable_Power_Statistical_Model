i <- 0
w<-1
q<-1
values<-seq(from =1, to=(9*40*5), by=1)
rmse.error.wind.tot <-data.frame(A=values,b=values,C=values,RMSE=values)
pred.sin.days <- seq(1,nrow(location1))
for(A in seq(from=1,to=3,by=.25))
{
for(b in seq(from=100,to=300,by=5))
{
for(C in seq(from = 0, to = 2, by=.5))
{
rse.error.wind <-0
rmse.error.wind <-0
for(i in seq(from=1,to=nrow(location1),by=1))
{
pred.sin.days[i] <- (A*cos((pi*location1$total.days[i])/b))+C
rse.error.wind <- rse.error.wind + ((pred.sin.days[i]-location1$daily_Wind[i])^4)
}
rmse.error.wind <- sqrt(rse.error.wind/nrow(location1))
rmse.error.wind.tot$A[w] <- A
rmse.error.wind.tot$b[w] <- b
rmse.error.wind.tot$C[w] <- C
rmse.error.wind.tot$RMSE[w] <- rmse.error.wind
w<-w+1
}
}
# q<-q+1
}
rmse.error.wind.tot %>%
ggplot(aes(x=b,y=RMSE))+
geom_smooth(se=FALSE,color=C)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(caret)
daily.ave <- read.csv("Daily Averages per Location")
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%#,
#X>4500,
#X<7000) %>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(250)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
#cross validation
folds <- createFolds(location1$daily_Wind,
k = 5,
returnTrain = TRUE)
ctrl <- trainControl(method = "cv",
index = folds)
#traing for loop
A <- 2
b <- 100
i <- 0
w<-1
q<-1
values<-seq(from =1, to=(9*40*5), by=1)
rmse.error.wind.tot <-data.frame(A=values,b=values,C=values,RMSE=values)
pred.sin.days <- seq(1,nrow(location1))
for(A in seq(from=1,to=3,by=.25))
{
for(b in seq(from=100,to=300,by=5))
{
for(C in seq(from = 0, to = 2, by=.5))
{
rse.error.wind <-0
rmse.error.wind <-0
for(i in seq(from=1,to=nrow(location1),by=1))
{
pred.sin.days[i] <- (A*cos((pi*location1$total.days[i])/b))+C
rse.error.wind <- rse.error.wind + ((pred.sin.days[i]-location1$daily_Wind[i])^2)
}
rmse.error.wind <- sqrt(rse.error.wind/nrow(location1))
rmse.error.wind.tot$A[w] <- A
rmse.error.wind.tot$b[w] <- b
rmse.error.wind.tot$C[w] <- C
rmse.error.wind.tot$RMSE[w] <- rmse.error.wind
w<-w+1
}
}
# q<-q+1
}
#cross validation
folds <- createFolds(location1$daily_Wind,
k = 5,
returnTrain = TRUE)
ctrl <- trainControl(method = "cv",
index = folds)
#traing for loop
A <- 2
b <- 100
i <- 0
w<-1
q<-1
values<-seq(from =1, to=(9*41*5), by=1)
rmse.error.wind.tot <-data.frame(A=values,b=values,C=values,RMSE=values)
pred.sin.days <- seq(1,nrow(location1))
for(A in seq(from=1,to=3,by=.25))
{
for(b in seq(from=100,to=300,by=5))
{
for(C in seq(from = 0, to = 2, by=.5))
{
rse.error.wind <-0
rmse.error.wind <-0
for(i in seq(from=1,to=nrow(location1),by=1))
{
pred.sin.days[i] <- (A*cos((pi*location1$total.days[i])/b))+C
rse.error.wind <- rse.error.wind + ((pred.sin.days[i]-location1$daily_Wind[i])^2)
}
rmse.error.wind <- sqrt(rse.error.wind/nrow(location1))
rmse.error.wind.tot$A[w] <- A
rmse.error.wind.tot$b[w] <- b
rmse.error.wind.tot$C[w] <- C
rmse.error.wind.tot$RMSE[w] <- rmse.error.wind
w<-w+1
}
}
# q<-q+1
}
rmse.error.wind.tot %>%
ggplot(aes(x=b,y=RMSE))+
geom_smooth(se=FALSE,color=C)
rmse.error.wind.tot %>%
filter(RMSE==min(rmse.error.wind.tot$RMSE))
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%#,
#X>4500,
#X<7000) %>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%,
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062),
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062,
X>4500,
X<7000) %>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062d,
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062,
X>4500,
X<6000) %>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062,
X>5500,
X<7000) %>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))%>%
filter(total.days>5000,
total.days<7000)
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))%>%
filter(total.days<5000,
total.days>7000)
location1 %>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
filter(total.days>5000,
total.days<7000)
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
filter(total.days>5000,
total.days<7000)%>%
mutate(sin.days = (1*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
#cross validation
folds <- createFolds(location1$daily_Wind,
k = 5,
returnTrain = TRUE)
ctrl <- trainControl(method = "cv",
index = folds)
#traing for loop
A <- 2
b <- 100
i <- 0
w<-1
q<-1
values<-seq(from =1, to=(11*41*5), by=1)
rmse.error.wind.tot <-data.frame(A=values,b=values,C=values,RMSE=values)
pred.sin.days <- seq(1,nrow(location1))
for(A in seq(from=0,to=5,by=.5))
{
for(b in seq(from=100,to=300,by=5))
{
for(C in seq(from = 0, to = 2, by=.5))
{
rse.error.wind <-0
rmse.error.wind <-0
for(i in seq(from=1,to=nrow(location1),by=1))
{
pred.sin.days[i] <- (A*cos((pi*location1$total.days[i])/b))+C
rse.error.wind <- rse.error.wind + ((pred.sin.days[i]-location1$daily_Wind[i])^2)
}
rmse.error.wind <- sqrt(rse.error.wind/nrow(location1))
rmse.error.wind.tot$A[w] <- A
rmse.error.wind.tot$b[w] <- b
rmse.error.wind.tot$C[w] <- C
rmse.error.wind.tot$RMSE[w] <- rmse.error.wind
w<-w+1
}
}
# q<-q+1
}
rmse.error.wind.tot %>%
ggplot(aes(x=b,y=RMSE))+
geom_smooth(se=FALSE,color=C)
rmse.error.wind.tot %>%
filter(RMSE==min(rmse.error.wind.tot$RMSE))
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
filter(total.days>5000,
total.days<7000)%>%
mutate(sin.days = (.5*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
filter(total.days>2000,
total.days<4000)%>%
mutate(sin.days = (.5*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
orgin_Date <- (as.Date(location1$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
location1 %>%
filter(total.days>2000,
total.days<4000)%>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
fitted1<-location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted1 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
fitted1 <- location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted1 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
rmse.error.wind.tot %>%
ggplot(aes(x=b,y=RMSE))+
geom_smooth(se=FALSE,color=C)
rmse.error.wind.tot %>%
filter(RMSE==min(rmse.error.wind.tot$RMSE))
fitted1 <- location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted1 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
fitted1
fitted1 <- location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted1%>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
fitted12 <- location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted12 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
rm(list=ls())
location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
fitted12 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1) %>%
location1
daily.ave
library(ggplot2)
library(tidyverse)
library(lubridate)
library(caret)
daily.ave <- read.csv("Daily Averages per Location")
orgin_Date <- (as.Date(location1$DATE[1]))
orgin_Date <- (as.Date(daily.ave$DATE[1]))
location1 <- daily.ave %>%
filter(Locations ==1020062)%>%
mutate(total.days = day(days(as.Date(DATE)-orgin_Date)))
orgin_Date
#cross validation
#folds <- createFolds(location1$daily_Wind,
#                     k = 5,
#                     returnTrain = TRUE)
#ctrl <- trainControl(method = "cv",
#                     index = folds)
#traing for loop
A <- 2
b <- 100
i <- 0
w<-1
q<-1
values<-seq(from =1, to=(11*41*5), by=1)
rmse.error.wind.tot <-data.frame(A=values,b=values,C=values,RMSE=values)
pred.sin.days <- seq(1,nrow(location1))
for(A in seq(from=0,to=5,by=.5))
{
for(b in seq(from=100,to=300,by=5))
{
for(C in seq(from = 0, to = 2, by=.5))
{
rse.error.wind <-0
rmse.error.wind <-0
for(i in seq(from=1,to=nrow(location1),by=1))
{
pred.sin.days[i] <- (A*cos((pi*location1$total.days[i])/b))+C
rse.error.wind <- rse.error.wind + ((pred.sin.days[i]-location1$daily_Wind[i])^2)
}
rmse.error.wind <- sqrt(rse.error.wind/nrow(location1))
rmse.error.wind.tot$A[w] <- A
rmse.error.wind.tot$b[w] <- b
rmse.error.wind.tot$C[w] <- C
rmse.error.wind.tot$RMSE[w] <- rmse.error.wind
w<-w+1
}
}
# q<-q+1
}
rmse.error.wind.tot %>%
ggplot(aes(x=b,y=RMSE))+
geom_smooth(se=FALSE,color=C)
rmse.error.wind.tot %>%
filter(RMSE==min(rmse.error.wind.tot$RMSE))
fitted1<-location1 %>%
mutate(sin.days = (1.5*cos((pi*total.days)/(185)))+1)
fitted1 %>%
filter(total.days>2000,
total.days<4000)%>%
ggplot()+
geom_smooth(aes(y = sin.days, x = total.days),se=FALSE)+
geom_point(aes(total.days,daily_Wind),alpha = .2)
fitted1
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error$errors
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days) %>%
ggplot(aes(errors))+
geom_histogram()
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error %>%
ggplot(aes(errors))+
geom_histogram()
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error %>%
ggplot(aes(errors))+
geom_histogram(bins=15,alpha=.4,fill="blue",color="black")
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
library(ggplot2)
library(tidyverse)
library(lubridate)
library(caret)
library(MASS)
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
fit <- fitdistr(error$errors, densfun="normal")
fit
fit$loglik
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
fit <- fitdistr(error$errors, densfun="normal")
fit
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")+
curve(dnorm(x, fit$estimate[1], fit$estimate[2]), col="red", lwd=2, add=T)
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
curve(dnorm(x, fit$estimate[1], fit$estimate[2]), col="red", lwd=2, add=T)
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
curve(dnorm(x, fit$estimate[1], fit$estimate[2]), col="red", lwd=2, add=T)
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
curve(dnorm(error$errors, fit$estimate[1], fit$estimate[2]), col="red", lwd=2, add=T)
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
fit$loglik
error <- fitted1%>%
mutate(errors = daily_Wind-sin.days)
fit <- fitdistr(error$errors, densfun="normal")
fit
fit$loglik
error %>%
ggplot(aes(errors))+
geom_histogram(bins=20,alpha=.4,fill="blue",color="black")
fit
